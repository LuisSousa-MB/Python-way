The Zen of Python, by Tim Peters


Beautiful is better than ugly.

Explicit is better than implicit.

Simple is better than complex.

Complex is better than complicated.

Flat is better than nested.

Sparse is better than dense.

Readability counts.

Special cases aren't special enough to break the rules.

Although practicality beats purity.

Errors should never pass silently.

Unless explicitly silenced.

In the face of ambiguity, refuse the temptation to guess.

There should be one-- and preferably only one --obvious way to do it.

Although that way may not be obvious at first unless you're Dutch.

Now is better than never.

Although never is often better than right now.

If the implementation is hard to explain, it's a bad idea.

If the implementation is easy to explain, it may be a good idea.

Namespaces are one honking great idea -- let's do more of those!

_______________________________________________________________________________

O Zen de Python, por Tim Peters


Linda é melhor que feia.

Explícito é melhor do que implícito.

Simples é melhor que complexo.

Complexo é melhor do que complicado.

A planície é melhor que o aninhado.

Esparse é melhor do que densa.

Contagem de legibilidade.

Casos especiais não são especiais o suficiente para quebrar as regras.

Embora a praticidade supere a pureza.

Os erros nunca devem passar silenciosamente.

A menos que explicitamente silenciado.

Diante da ambiguidade, recuse a tentação de adivinhar.

Deveria haver um-e, de preferência, apenas uma-maneira óbvia de fazê-lo.

Embora dessa maneira possa não ser óbvio a princípio, a menos que você seja holandês.

Agora é melhor do que nunca.

Embora nunca seja frequentemente melhor do que agora.

Se a implementação é difícil de explicar, é uma má ideia.

Se a implementação for fácil de explicar, pode ser uma boa ideia.

Os namespaces são uma ótima idéia - vamos fazer mais deles!